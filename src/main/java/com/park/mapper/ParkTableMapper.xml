<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.park.mapper.ParkTableMapper" >
  <resultMap id="BaseResultMap" type="com.park.pojo.ParkTable" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="park_name" property="parkName" jdbcType="VARCHAR" />
    <result column="park_file" property="parkFile" jdbcType="VARCHAR" />
    <result column="park_hot" property="parkHot" jdbcType="INTEGER" />
    <result column="park_longitude" property="parkLongitude" jdbcType="DOUBLE" />
    <result column="park_latitude" property="parkLatitude" jdbcType="DOUBLE" />
    <result column="park_maxpeople" property="parkMaxpeople" jdbcType="INTEGER" />
    <result column="park_intime" property="parkIntime" jdbcType="VARCHAR" />
    <result column="park_outtime" property="parkOuttime" jdbcType="VARCHAR" />
    <result column="park_newpeople" property="parkNewpeople" jdbcType="INTEGER" />
    <result column="park_waittime" property="parkWaittime" jdbcType="INTEGER" />
    <result column="park_collection" property="parkCollection" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, park_name, park_file, park_hot, park_longitude, park_latitude, park_maxpeople, 
    park_intime, park_outtime, park_newpeople, park_waittime, park_collection
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.park.pojo.ParkTableExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from park_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from park_table
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from park_table
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.park.pojo.ParkTableExample" >
    delete from park_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.park.pojo.ParkTable" >
    insert into park_table (id, park_name, park_file, 
      park_hot, park_longitude, park_latitude, 
      park_maxpeople, park_intime, park_outtime, 
      park_newpeople, park_waittime, park_collection
      )
    values (#{id,jdbcType=INTEGER}, #{parkName,jdbcType=VARCHAR}, #{parkFile,jdbcType=VARCHAR}, 
      #{parkHot,jdbcType=INTEGER}, #{parkLongitude,jdbcType=DOUBLE}, #{parkLatitude,jdbcType=DOUBLE}, 
      #{parkMaxpeople,jdbcType=INTEGER}, #{parkIntime,jdbcType=VARCHAR}, #{parkOuttime,jdbcType=VARCHAR}, 
      #{parkNewpeople,jdbcType=INTEGER}, #{parkWaittime,jdbcType=INTEGER}, #{parkCollection,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.park.pojo.ParkTable" >
    insert into park_table
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parkName != null" >
        park_name,
      </if>
      <if test="parkFile != null" >
        park_file,
      </if>
      <if test="parkHot != null" >
        park_hot,
      </if>
      <if test="parkLongitude != null" >
        park_longitude,
      </if>
      <if test="parkLatitude != null" >
        park_latitude,
      </if>
      <if test="parkMaxpeople != null" >
        park_maxpeople,
      </if>
      <if test="parkIntime != null" >
        park_intime,
      </if>
      <if test="parkOuttime != null" >
        park_outtime,
      </if>
      <if test="parkNewpeople != null" >
        park_newpeople,
      </if>
      <if test="parkWaittime != null" >
        park_waittime,
      </if>
      <if test="parkCollection != null" >
        park_collection,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parkName != null" >
        #{parkName,jdbcType=VARCHAR},
      </if>
      <if test="parkFile != null" >
        #{parkFile,jdbcType=VARCHAR},
      </if>
      <if test="parkHot != null" >
        #{parkHot,jdbcType=INTEGER},
      </if>
      <if test="parkLongitude != null" >
        #{parkLongitude,jdbcType=DOUBLE},
      </if>
      <if test="parkLatitude != null" >
        #{parkLatitude,jdbcType=DOUBLE},
      </if>
      <if test="parkMaxpeople != null" >
        #{parkMaxpeople,jdbcType=INTEGER},
      </if>
      <if test="parkIntime != null" >
        #{parkIntime,jdbcType=VARCHAR},
      </if>
      <if test="parkOuttime != null" >
        #{parkOuttime,jdbcType=VARCHAR},
      </if>
      <if test="parkNewpeople != null" >
        #{parkNewpeople,jdbcType=INTEGER},
      </if>
      <if test="parkWaittime != null" >
        #{parkWaittime,jdbcType=INTEGER},
      </if>
      <if test="parkCollection != null" >
        #{parkCollection,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.park.pojo.ParkTableExample" resultType="java.lang.Integer" >
    select count(*) from park_table
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update park_table
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parkName != null" >
        park_name = #{record.parkName,jdbcType=VARCHAR},
      </if>
      <if test="record.parkFile != null" >
        park_file = #{record.parkFile,jdbcType=VARCHAR},
      </if>
      <if test="record.parkHot != null" >
        park_hot = #{record.parkHot,jdbcType=INTEGER},
      </if>
      <if test="record.parkLongitude != null" >
        park_longitude = #{record.parkLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.parkLatitude != null" >
        park_latitude = #{record.parkLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.parkMaxpeople != null" >
        park_maxpeople = #{record.parkMaxpeople,jdbcType=INTEGER},
      </if>
      <if test="record.parkIntime != null" >
        park_intime = #{record.parkIntime,jdbcType=VARCHAR},
      </if>
      <if test="record.parkOuttime != null" >
        park_outtime = #{record.parkOuttime,jdbcType=VARCHAR},
      </if>
      <if test="record.parkNewpeople != null" >
        park_newpeople = #{record.parkNewpeople,jdbcType=INTEGER},
      </if>
      <if test="record.parkWaittime != null" >
        park_waittime = #{record.parkWaittime,jdbcType=INTEGER},
      </if>
      <if test="record.parkCollection != null" >
        park_collection = #{record.parkCollection,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update park_table
    set id = #{record.id,jdbcType=INTEGER},
      park_name = #{record.parkName,jdbcType=VARCHAR},
      park_file = #{record.parkFile,jdbcType=VARCHAR},
      park_hot = #{record.parkHot,jdbcType=INTEGER},
      park_longitude = #{record.parkLongitude,jdbcType=DOUBLE},
      park_latitude = #{record.parkLatitude,jdbcType=DOUBLE},
      park_maxpeople = #{record.parkMaxpeople,jdbcType=INTEGER},
      park_intime = #{record.parkIntime,jdbcType=VARCHAR},
      park_outtime = #{record.parkOuttime,jdbcType=VARCHAR},
      park_newpeople = #{record.parkNewpeople,jdbcType=INTEGER},
      park_waittime = #{record.parkWaittime,jdbcType=INTEGER},
      park_collection = #{record.parkCollection,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.park.pojo.ParkTable" >
    update park_table
    <set >
      <if test="parkName != null" >
        park_name = #{parkName,jdbcType=VARCHAR},
      </if>
      <if test="parkFile != null" >
        park_file = #{parkFile,jdbcType=VARCHAR},
      </if>
      <if test="parkHot != null" >
        park_hot = #{parkHot,jdbcType=INTEGER},
      </if>
      <if test="parkLongitude != null" >
        park_longitude = #{parkLongitude,jdbcType=DOUBLE},
      </if>
      <if test="parkLatitude != null" >
        park_latitude = #{parkLatitude,jdbcType=DOUBLE},
      </if>
      <if test="parkMaxpeople != null" >
        park_maxpeople = #{parkMaxpeople,jdbcType=INTEGER},
      </if>
      <if test="parkIntime != null" >
        park_intime = #{parkIntime,jdbcType=VARCHAR},
      </if>
      <if test="parkOuttime != null" >
        park_outtime = #{parkOuttime,jdbcType=VARCHAR},
      </if>
      <if test="parkNewpeople != null" >
        park_newpeople = #{parkNewpeople,jdbcType=INTEGER},
      </if>
      <if test="parkWaittime != null" >
        park_waittime = #{parkWaittime,jdbcType=INTEGER},
      </if>
      <if test="parkCollection != null" >
        park_collection = #{parkCollection,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.park.pojo.ParkTable" >
    update park_table
    set park_name = #{parkName,jdbcType=VARCHAR},
      park_file = #{parkFile,jdbcType=VARCHAR},
      park_hot = #{parkHot,jdbcType=INTEGER},
      park_longitude = #{parkLongitude,jdbcType=DOUBLE},
      park_latitude = #{parkLatitude,jdbcType=DOUBLE},
      park_maxpeople = #{parkMaxpeople,jdbcType=INTEGER},
      park_intime = #{parkIntime,jdbcType=VARCHAR},
      park_outtime = #{parkOuttime,jdbcType=VARCHAR},
      park_newpeople = #{parkNewpeople,jdbcType=INTEGER},
      park_waittime = #{parkWaittime,jdbcType=INTEGER},
      park_collection = #{parkCollection,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>